const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
const generateBtn = document.getElementById('generate');
const downloadBtn = document.getElementById('download');

// Размер итогового изображения (можно менять)
const CANVAS_WIDTH = 500;
const CANVAS_HEIGHT = 500;
canvas.width = CANVAS_WIDTH;
canvas.height = CANVAS_HEIGHT;

// Пути к папкам с изображениями
const backgroundFolder = "assets/background/";
const imageFolder = "assets/image/";
const textFolder = "assets/text/";

// Списки файлов (замени на реальные файлы в папках)
const backgrounds = ["bg1.png", "bg2.png"];
const images = ["img1.png", "img2.png"];
const texts = ["text1.png", "text2.png"];

// Функция загрузки изображения
function loadImage(src) {
    return new Promise((resolve) => {
        const img = new Image();
        img.src = src;
        img.onload = () => resolve(img);
    });
}

// Функция выбора случайного изображения из списка
function getRandomImage(folder, files) {
    const randomFile = files[Math.floor(Math.random() * files.length)];
    return folder + randomFile;
}

// Генерация изображения
async function generateImage() {
    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT); // Очистка перед новым рендерингом

    // Загрузка случайных изображений
    const bg = await loadImage(getRandomImage(backgroundFolder, backgrounds));
    const img = await loadImage(getRandomImage(imageFolder, images));
    const txt = await loadImage(getRandomImage(textFolder, texts));

    // Рендеринг
    ctx.drawImage(bg, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT); // Фон на всю область

    // Центрирование и обрезка изображения
    const imgX = (CANVAS_WIDTH - img.width) / 2;
    const imgY = (CANVAS_HEIGHT - img.height) / 2;
    ctx.drawImage(img, imgX, imgY, img.width, img.height);

    // Текст поверх изображения
    ctx.drawImage(txt, 50, 50, 400, 100);
}

// Функция скачивания изображения
function downloadImage() {
    const link = document.createElement('a');
    link.download = 'generated-image.png';
    link.href = canvas.toDataURL();
    link.click();
}

// Обработчики кнопок
generateBtn.addEventListener('click', generateImage);
downloadBtn.addEventListener('click', downloadImage);
